image: $CI_IMAGE

stages:
  - setup
  - test
  - codecov
  - deploy

services:
  - "postgres:9.6"
  - "redis:5.0.6-alpine"

# Use only the following CI runners
.runners:
  tags:
    - gitlabci-runner-eks-shared-dev

.base-test:
  extends:
    - .runners
  # Cancel if new commits where pushed
  interruptible: true
  # Run only when there is an MR
  only:
    - master
    - merge_requests
  stage: test
  retry:
    max: 2
    when:
      - script_failure
      - runner_system_failure

.base-ruby:
  extends: .base-test
  before_script:
    - time bundle install --jobs $(nproc) --path vendor "${FLAGS[@]}"
    - cp ./spec/dummy/config/database.ci.yml ./spec/dummy/config/database.yml
    - RAILS_ENV=test bundle exec rails db:create db:migrate

.base-js:
  extends: .base-test
  before_script:
    - yarn

.base-rspec:
  extends: .base-ruby
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  artifacts:
    paths:
      - "coverage/$CI_JOB_NAME"
    name: "$CI_JOB_NAME Coverage"
    when: always

rubocop:
  extends: .base-ruby
  script:
    - bundle exec rubocop -f simple -P

eslint-prettier:
  extends: .base-js
  script:
    - make lint-js

schema-linter:
  extends: .base-ruby
  script:
    - yarn
    # Hacky fix to make file run in CI
    - sed -i "1s/.*/\#\!\/usr\/bin\/env node/" node_modules/schemalint/bin/schemalint
    - make lint-schema

rspec (controllers):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/controllers

rspec (jobs):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/jobs

rspec (lib):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/lib

rspec (models):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/models

rspec (other):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/other

rspec (performance):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/performance

rspec (requests):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/requests

rspec (services):
  extends: .base-rspec
  script:
    - bundle exec rspec spec/services

rspec-features-1:
  extends: .base-rspec
  script:
    - ln -s /opt/support/extjs /cm_tech/marty/spec/dummy/public/extjs
    - bundle exec rspec spec/features --tag ~speed --format documentation

rspec-features-2:
  extends: .base-rspec
  script:
    - ln -s /opt/support/extjs /cm_tech/marty/spec/dummy/public/extjs
    - bundle exec rspec spec/features --tag speed:slow --format documentation

rspec-features-3:
  extends: .base-rspec
  script:
    - ln -s /opt/support/extjs /cm_tech/marty/spec/dummy/public/extjs
    - bundle exec rspec spec/features --tag speed:super_slow --format documentation

code coverage:
  extends: .base-ruby
  stage: codecov
  when: always
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  only:
    - merge_requests
  script:
    - bundle exec rake marty:merge_coverage_reports
  artifacts:
    paths:
      - "coverage/"
    name: "Pipeline $CI_PIPELINE_ID Merged Coverage"

cache:
  key: 'marty_bundler_cache'
  paths:
    - vendor/ruby

variables:
  BUNDLER_VERSION: "2.0.1"
  COVERAGE: "true"
  DOCKER_AUTH_CONFIG: '{ "credsStore": "ecr-login" }'
  GIT_SSL_NO_VERIFY: "true"
  HEADLESS: "true"
  HEADLESS_WINDOW_SIZE: "1400,1400"
  PGTZ: "America/Los_Angeles"
  POSTGRES_USER: "runner"
  POSTGRES_DB_NAME: "marty_test"
  POSTGRES_HOST: "127.0.0.1"
  POSTGRES_PASSWORD: "runner-password"
  POSTGRES_HOST_AUTH_METHOD: "trust"
  MARTY_REDIS_URL: 'localhost:6379/1'
  RAILS_ENV: "test"
  RAILS_DUMP_SCHEMA: "false"
  RSPEC_AUTO_RETRY_JS: "true"

