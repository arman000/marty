require 'spec_helper'
require 'job_helper'

describe Marty::Delayed::ExtendedCronParser do

  def get_ext_crons method = :next
    [
      '* * * * * * *',
      '10 * * * * * *',
      '*/20 * * * * * *',
      '1,2,3,4 * * * * * *',
      '10-20/5 * * * * *',
    ].map{
      |c|
      (0..3).map do |e|
        nxt = described_class.new(c).send(method)
        Timecop.freeze(nxt)
        nxt.to_s
      end
    }
  end

  it "extends the normal cron parser to include seconds correctly" do
    Timecop.freeze(Time.local(2018))
    nxt   = get_ext_crons

    Timecop.freeze(Time.local(2018) + 1234)
    nxt_  = get_ext_crons

    Timecop.freeze(Time.local(2018))
    last  = get_ext_crons(:last)

    Timecop.freeze(Time.local(2018) + 1234)
    last_ = get_ext_crons(:last)

    exp_nxt = [
      ["2018-01-01 00:00:01 -0800",
       "2018-01-01 00:00:02 -0800",
       "2018-01-01 00:00:03 -0800",
       "2018-01-01 00:00:04 -0800"],

      ["2018-01-01 00:00:10 -0800",
       "2018-01-01 00:01:10 -0800",
       "2018-01-01 00:02:10 -0800",
       "2018-01-01 00:03:10 -0800"],

      ["2018-01-01 00:03:20 -0800",
       "2018-01-01 00:03:40 -0800",
       "2018-01-01 00:04:00 -0800",
       "2018-01-01 00:04:20 -0800"],

      ["2018-01-01 00:05:01 -0800",
       "2018-01-01 00:05:02 -0800",
       "2018-01-01 00:05:03 -0800",
       "2018-01-01 00:05:04 -0800"],

      ["2018-01-01 00:05:10 -0800",
       "2018-01-01 00:05:15 -0800",
       "2018-01-01 00:05:20 -0800",
       "2018-01-01 00:06:10 -0800"]
    ]

    exp_nxt_ = [
      ["2018-01-01 00:20:35 -0800",
       "2018-01-01 00:20:36 -0800",
       "2018-01-01 00:20:37 -0800",
       "2018-01-01 00:20:38 -0800"],

      ["2018-01-01 00:21:10 -0800",
       "2018-01-01 00:22:10 -0800",
       "2018-01-01 00:23:10 -0800",
       "2018-01-01 00:24:10 -0800"],

      ["2018-01-01 00:24:20 -0800",
       "2018-01-01 00:24:40 -0800",
       "2018-01-01 00:25:00 -0800",
       "2018-01-01 00:25:20 -0800"],

      ["2018-01-01 00:26:01 -0800",
       "2018-01-01 00:26:02 -0800",
       "2018-01-01 00:26:03 -0800",
       "2018-01-01 00:26:04 -0800"],

      ["2018-01-01 00:26:10 -0800",
       "2018-01-01 00:26:15 -0800",
       "2018-01-01 00:26:20 -0800",
       "2018-01-01 00:27:10 -0800"]
    ]

    exp_last  = [
      ["2017-12-31 23:59:59 -0800",
       "2017-12-31 23:59:58 -0800",
       "2017-12-31 23:59:57 -0800",
       "2017-12-31 23:59:56 -0800"],

      ["2017-12-31 23:59:10 -0800",
       "2017-12-31 23:58:10 -0800",
       "2017-12-31 23:57:10 -0800",
       "2017-12-31 23:56:10 -0800"],

      ["2017-12-31 23:56:00 -0800",
       "2017-12-31 23:55:40 -0800",
       "2017-12-31 23:55:20 -0800",
       "2017-12-31 23:55:00 -0800"],

      ["2017-12-31 23:54:04 -0800",
       "2017-12-31 23:54:03 -0800",
       "2017-12-31 23:54:02 -0800",
       "2017-12-31 23:54:01 -0800"],

      ["2017-12-31 23:53:20 -0800",
       "2017-12-31 23:53:15 -0800",
       "2017-12-31 23:53:10 -0800",
       "2017-12-31 23:52:20 -0800"]]

    exp_last_ = [
      ["2018-01-01 00:20:33 -0800",
       "2018-01-01 00:20:32 -0800",
       "2018-01-01 00:20:31 -0800",
       "2018-01-01 00:20:30 -0800"],

      ["2018-01-01 00:20:10 -0800",
       "2018-01-01 00:19:10 -0800",
       "2018-01-01 00:18:10 -0800",
       "2018-01-01 00:17:10 -0800"],

      ["2018-01-01 00:17:00 -0800",
       "2018-01-01 00:16:40 -0800",
       "2018-01-01 00:16:20 -0800",
       "2018-01-01 00:16:00 -0800"],

      ["2018-01-01 00:15:04 -0800",
       "2018-01-01 00:15:03 -0800",
       "2018-01-01 00:15:02 -0800",
       "2018-01-01 00:15:01 -0800"],

      ["2018-01-01 00:14:20 -0800",
       "2018-01-01 00:14:15 -0800",
       "2018-01-01 00:14:10 -0800",
       "2018-01-01 00:13:20 -0800"]]

    expect(nxt).to   eq(exp_nxt)
    expect(nxt_).to  eq(exp_nxt_)
    expect(last).to  eq(exp_last)
    expect(last_).to eq(exp_last_)

    Timecop.return
  end
end
